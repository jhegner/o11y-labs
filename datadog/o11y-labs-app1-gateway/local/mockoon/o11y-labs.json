{
  "uuid": "0d7e56fa-471c-4540-b076-ec85d543a9ca",
  "lastMigration": 33,
  "name": "O11y labs",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "ef08d379-67d6-4259-9182-d2121b815049",
      "type": "http",
      "documentation": "Usuarios ",
      "method": "get",
      "endpoint": "moock/users",
      "responses": [
        {
          "uuid": "4d7c0e34-83d7-476f-b1c3-7c83b906d144",
          "body": "{\n  \"users\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"userId\": \"{{ faker 'number.int' min=10000 max=100000 }}\",\n        \"firstname\": \"{{ faker 'person.firstName' }}\",\n        \"lastname\": \"{{ faker 'person.lastName' }}\",\n        \"friends\": [\n          {{# repeat (faker 'number.int' 5) }}\n            {\n              \"id\": \"{{ faker 'string.uuid' }}\"\n            }\n          {{/ repeat }}\n        ]\n      },\n    {{/ repeat }}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User ok respose",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "d51cfdda-2971-43c7-829a-9492f9fb1a5f",
          "body": "{\n  \"data\": {\n    \"message\": \"User send a bad request \"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Simulate a user bad request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1481fc0b-f93b-459c-9659-db2c61fd3547",
          "body": "{\n  \"error\": \"Server or application is unavaible\",\n  \"status\": 500\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Simulate a server error",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a5916bbf-527b-4b6e-8e8b-a984182780c0",
          "body": "{\n  \"users\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"userId\": \"{{ faker 'number.int' min=10000 max=100000 }}\",\n        \"firstname\": \"{{ faker 'person.firstName' }}\",\n        \"lastname\": \"{{ faker 'person.lastName' }}\",\n        \"friends\": [\n          {{# repeat (faker 'number.int' 5) }}\n            {\n              \"id\": \"{{ faker 'string.uuid' }}\"\n            }\n          {{/ repeat }}\n        ]\n      },\n    {{/ repeat }}\n  ]\n}",
          "latency": 7000,
          "statusCode": 200,
          "label": "Simulate a 7s lattency request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0b3510ce-a1e7-41e2-b689-ae6e9b28f404",
          "body": "{\n  \"users\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"userId\": \"{{ faker 'number.int' min=10000 max=100000 }}\",\n        \"firstname\": \"{{ faker 'person.firstName' }}\",\n        \"lastname\": \"{{ faker 'person.lastName' }}\",\n        \"friends\": [\n          {{# repeat (faker 'number.int' 5) }}\n            {\n              \"id\": \"{{ faker 'string.uuid' }}\"\n            }\n          {{/ repeat }}\n        ]\n      },\n    {{/ repeat }}\n  ]\n}",
          "latency": 3800,
          "statusCode": 200,
          "label": "Simulate a 3s lattency request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ce1646ce-5b20-447a-ae3d-8c5b95ab3ff4",
          "body": "{\n  \"data\": {\n    \"message\": \"Unprocessable request ðŸ˜­\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Simulate a unprocessable entity",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a6f5e48a-c96b-4fde-8d7d-e3c56a04ebca",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Simulate a Gateway Timeout",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0042a861-def0-4844-a989-0fb0bf2a8e1c",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Simulate not unauthorized",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": "RANDOM",
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "381aa44c-e8f3-4850-b4d7-59a025649cfa",
      "type": "http",
      "documentation": "Usuarios ",
      "method": "get",
      "endpoint": "moock/books",
      "responses": [
        {
          "uuid": "6c255dc5-5582-4a1f-8ac5-7eb86e6c80cb",
          "body": "{\n  \"books\": [\n    {{# repeat (queryParam 'total' '5') }}\n      {\n        \"isbn\": \"{{ faker 'commerce.isbn' }}\",\n        \"title\": \"{{ faker 'book.title' }}\",\n        \"author\": \"{{ faker 'book.author' }}\",\n        \"genre\": \"{{ faker 'book.genre' }}\",\n        \"publisher\": \"{{ faker 'book.publisher' }}\"\n      },\n    {{/ repeat }}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User ok respose",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "485d09e9-7ee8-4b2b-8657-5ee59ab05863",
          "body": "{\n  \"data\": {\n    \"message\": \"User send a bad request \"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Simulate a user bad request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6ddc8030-f3db-4618-a1a5-cc2ec9ba85f4",
          "body": "{\n  \"error\": \"Server or application is unavaible\",\n  \"status\": 500\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Simulate a server error",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "64297c53-8a9a-4149-81dc-39e2dd43f00e",
          "body": "{\n  \"books\": [\n    {{# repeat (queryParam 'total' '5') }}\n      {\n        \"isbn\": \"{{ faker 'commerce.isbn' }}\",\n        \"title\": \"{{ faker 'book.title' }}\",\n        \"author\": \"{{ faker 'book.author' }}\",\n        \"genre\": \"{{ faker 'book.genre' }}\",\n        \"publisher\": \"{{ faker 'book.publisher' }}\"\n      },\n    {{/ repeat }}\n  ]\n}",
          "latency": 5500,
          "statusCode": 200,
          "label": "Simulate a 5s lattency request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a49dadd8-435e-4278-a52b-0266712354e7",
          "body": "{\n  \"books\": [\n    {{# repeat (queryParam 'total' '5') }}\n      {\n        \"isbn\": \"{{ faker 'commerce.isbn' }}\",\n        \"title\": \"{{ faker 'book.title' }}\",\n        \"author\": \"{{ faker 'book.author' }}\",\n        \"genre\": \"{{ faker 'book.genre' }}\",\n        \"publisher\": \"{{ faker 'book.publisher' }}\"\n      },\n    {{/ repeat }}\n  ]\n}",
          "latency": 13600,
          "statusCode": 200,
          "label": "Simulate a 13s lattency request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0041637c-ecb4-47d4-a56f-9c10294b221d",
          "body": "{\n  \"data\": {\n    \"message\": \"Unprocessable request ðŸ˜­\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Simulate a unprocessable entity",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "99547154-3deb-4ac0-9e90-deefaf8bbab3",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Simulate a Gateway Timeout",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "527409d4-aa67-4bc5-81a3-ce7e78f6e0fb",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Simulate not unauthorized",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": "RANDOM",
      "streamingMode": null,
      "streamingInterval": 0
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "ef08d379-67d6-4259-9182-d2121b815049"
    },
    {
      "type": "route",
      "uuid": "381aa44c-e8f3-4850-b4d7-59a025649cfa"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}